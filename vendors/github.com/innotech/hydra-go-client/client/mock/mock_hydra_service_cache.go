// Automatically generated by MockGen. DO NOT EDIT!
// Source: hydra_service_cache.go

package mock_client

import (
	gomock "github.com/innotech/hydra-reverse-proxy/vendors/github.com/innotech/hydra-go-client/vendors/code.google.com/p/gomock/gomock"
)

// Mock of HydraCache interface
type MockHydraCache struct {
	ctrl		*gomock.Controller
	recorder	*_MockHydraCacheRecorder
}

// Recorder for MockHydraCache (not exported)
type _MockHydraCacheRecorder struct {
	mock *MockHydraCache
}

func NewMockHydraCache(ctrl *gomock.Controller) *MockHydraCache {
	mock := &MockHydraCache{ctrl: ctrl}
	mock.recorder = &_MockHydraCacheRecorder{mock}
	return mock
}

func (_m *MockHydraCache) EXPECT() *_MockHydraCacheRecorder {
	return _m.recorder
}

func (_m *MockHydraCache) GetHydraServers() []string {
	ret := _m.ctrl.Call(_m, "GetHydraServers")
	ret0, _ := ret[0].([]string)
	return ret0
}

func (_mr *_MockHydraCacheRecorder) GetHydraServers() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetHydraServers")
}

func (_m *MockHydraCache) Refresh(newHydraServers []string) {
	_m.ctrl.Call(_m, "Refresh", newHydraServers)
}

func (_mr *_MockHydraCacheRecorder) Refresh(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Refresh", arg0)
}
